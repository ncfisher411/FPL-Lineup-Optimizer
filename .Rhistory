install.packages(package, dependencies = T)
}
library(package, character.only = T)
cat(paste(package, "package loaded.\n"))
}
## FBref
## Season-level data:
types <- c("standard", "shooting", "passing", "passing_types", "defense",
"possession", "misc")
vars <- data.frame(names=NA)
for(i in types) {
df <- fb_season_team_stats(country = "ENG", gender = "M", season_end_year = 2023,
tier = "1st", stat_type = i)
names <- colnames(df) %>% data.frame() %>% rename(names=1)
vars <- rbind(vars, names) %>% distinct(names)
}
vars$names
## What stats define team styles of play? Standardize all to per 90 minutes
stats <- c("Squad", "Season_End_Year", "Poss", "G_minus_PK", "xA", "npxg_Per_Minutes", "Att 3rd_Tackles", "Mid_3rd_Tackles",
"Def_3rd_Tackles", "Att_Long", "Att_Med", "Att_Short", "Carries_Carries",
"CK_Pass_Types", "CrdY", "Att_Challenges", "Att 3rd_Touches", "CrsPA",
"Dead_Pass_Types", "Def_3rd_Touches", "Live_Pass_Types", "Live_Touches",
"Mid 3rd_Tackles", "Mid 3rd_Touches", "PPA", "PrgC_Carries", "PrgP",
"SoT_per_90_Standard", "SoT_percent_Standard", "Won_Aerial_Dules", "MP_Playing_Time")
## Filter the data to these variables
df <- data.frame()
for(i in types) {
df <- fb_season_team_stats(country = "ENG", gender = "M", season_end_year = 2023,
tier = "1st", stat_type = i)
assign(i, df)
}
gc()
df <- standard %>%
left_join(shooting) %>% left_join(defense) %>%
left_join(passing) %>% left_join(passing_types) %>%
left_join(possession) %>% left_join(misc) %>%
select(any_of(stats))
rm(list=setdiff(ls(), "df"))
## Standardize data that needs to be into per 90 min
df_std <- df[, 3:ncol(df)]/90 %>%
select(-MP_Playing_Time)
df_std <- df[, 3:ncol(df)]/90
df_std <- df_std %>% select(-MP_Playing_Time)
View(df_std)
df_std <- df[, 3:ncol(df)]/90
df_std <- df_std %>%
rbind(df$Squad) %>%
select(-MP_Playing_Time) %>%
select(Squad, everything())
df_std <- df[, 3:ncol(df)]/90
df_std <- df_std %>%
rbind(df$Squad) %>%
select(-MP_Playing_Time)
df_std <- df[, 3:ncol(df)]/90
df_std <- df_std %>%
mutate(Squad=df$Squad) %>%
select(-MP_Playing_Time) %>%
select(Squad, everything())
df_opp <- split(df_std, rep(1:2, 20))
View(df_opp)
df_opp - df_opp$`2`
View(df_opp)
df_opp <- df %>%
filter(Squad=grepl("vs", Squad))
df_opp <- df %>%
filter(Squad==grepl("vs", Squad))
df_std <- df %>%
filter(Squad!=grepl("vs", Squad))
View(df_opp)
df_std <- df[, 3:ncol(df)]/90
df_std <- df_std %>%
mutate(Squad=df$Squad) %>%
select(-MP_Playing_Time) %>%
select(Squad, everything())
df_opp <- df %>%
filter(contains("vs", Squad))
df_std <- df[, 3:ncol(df)]/90
df_std <- df_std %>%
mutate(Squad=df$Squad) %>%
select(-MP_Playing_Time) %>%
select(Squad, everything())
df_opp <- df_std %>%
mutate(n=ifelse(grepl("vs", Squad), 1, NA)) %>%
filter(n=1) %>%
select(-n)
df_std <- df_std %>%
mutate(n=ifelse(grepl("vs", Squad), NA, 1)) %>%
filter(n=1) %>%
select(-n)
df_opp <- df_std %>%
mutate(n=ifelse(grepl("vs", Squad), 1, NA)) %>%
filter(n==1) %>%
select(-n)
df_std <- df_std %>%
mutate(n=ifelse(grepl("vs", Squad), NA, 1)) %>%
filter(n==1) %>%
select(-n)
View(df_opp)
df_std <- df[, 3:ncol(df)]/90
df_std <- df_std %>%
mutate(Squad=df$Squad) %>%
select(-MP_Playing_Time) %>%
select(Squad, everything())
df_opp <- df_std %>%
mutate(n=ifelse(grepl("vs", Squad), 1, NA)) %>%
filter(n==1) %>%
select(-n) %>%
mutate(Squad=gsub("vs ", "", Squad))
colnames(df_opp) <- paste(colnames(df_opp), "opp", sep="_")
## Now we want to classify team types - need to consider the following stats
## What defines how teams play?
## What data sources and stats can we look at?
## worldfootballR package
packages <- c("tidyverse", "worldfootballR", "scales", "cluster", "ClusterR",
"kableExtra", "magick")
for (package in packages) {
if (!requireNamespace(package, quietly = T)) {
install.packages(package, dependencies = T)
}
library(package, character.only = T)
cat(paste(package, "package loaded.\n"))
}
## FBref
## Season-level data:
types <- c("standard", "shooting", "passing", "passing_types", "defense",
"possession", "misc")
vars <- data.frame(names=NA)
for(i in types) {
df <- fb_season_team_stats(country = "ENG", gender = "M", season_end_year = 2023,
tier = "1st", stat_type = i)
names <- colnames(df) %>% data.frame() %>% rename(names=1)
vars <- rbind(vars, names) %>% distinct(names)
}
vars$names
## What stats define team styles of play? Standardize all to per 90 minutes
stats <- c("Squad", "Season_End_Year", "Poss", "G_minus_PK", "xA", "npxg_Per_Minutes", "Att 3rd_Tackles", "Mid_3rd_Tackles",
"Def_3rd_Tackles", "Att_Long", "Att_Med", "Att_Short", "Carries_Carries",
"CK_Pass_Types", "CrdY", "Att_Challenges", "Att 3rd_Touches", "CrsPA",
"Dead_Pass_Types", "Def_3rd_Touches", "Live_Pass_Types", "Live_Touches",
"Mid 3rd_Tackles", "Mid 3rd_Touches", "PPA", "PrgC_Carries", "PrgP",
"SoT_per_90_Standard", "SoT_percent_Standard", "Won_Aerial_Dules", "MP_Playing_Time")
## Filter the data to these variables
df <- data.frame()
for(i in types) {
df <- fb_season_team_stats(country = "ENG", gender = "M", season_end_year = 2023,
tier = "1st", stat_type = i)
assign(i, df)
}
gc()
df <- standard %>%
left_join(shooting) %>% left_join(defense) %>%
left_join(passing) %>% left_join(passing_types) %>%
left_join(possession) %>% left_join(misc) %>%
select(any_of(stats))
rm(list=setdiff(ls(), "df"))
## Standardize data that needs to be into per 90 min
df_std <- df[, 3:ncol(df)]/90
df_std <- df_std %>%
mutate(Squad=df$Squad) %>%
select(-MP_Playing_Time) %>%
select(Squad, everything())
df_opp <- df_std %>%
mutate(n=ifelse(grepl("vs", Squad), 1, NA)) %>%
filter(n==1) %>%
select(-n) %>%
mutate(Squad=gsub("vs ", "", Squad))
colnames(df_opp) <- paste(colnames(df_opp), "opp", sep="_")
df_opp <- df_opp %>% rename(Squad=1)
df_comb <- df_std %>%
mutate(n=ifelse(grepl("vs", Squad), NA, 1)) %>%
filter(n==1) %>%
select(-n) %>%
left_join(df_opp)
View(df_comb)
k2 <- kmeans(final, centers = 5, nstart = 25)
final <- df_comb %>%
select(-Squad)
## K-means clustering, yet again
set.seed(123)
k2 <- kmeans(final, centers = 5, nstart = 25)
class <- k2$cluster %>%
data.frame() %>%
mutate(Squad=df_comb$Squad) %>%
rename(Class=1) %>%
select(Squad, Class)
View(class)
set.seed(123)
k2 <- kmeans(final, centers = 7, nstart = 25)
class <- k2$cluster %>%
data.frame() %>%
mutate(Squad=df_comb$Squad) %>%
rename(Class=1) %>%
select(Squad, Class)
set.seed(123)
k2 <- kmeans(final, centers = 6, nstart = 25)
class <- k2$cluster %>%
data.frame() %>%
mutate(Squad=df_comb$Squad) %>%
rename(Class=1) %>%
select(Squad, Class)
gc()
class <- k2$cluster %>%
data.frame() %>%
mutate(Squad=df_comb$Squad) %>%
rename(Class=1) %>%
select(Squad, Class) %>%
left_join(df_comb)
rm(list=setdiff(ls(), "class"))
ranks <- class %>%
mutate_at(vars(-Squad, -Class), funs(rank(-.)))
View(ranks)
## Now we want to classify team types - need to consider the following stats
## What defines how teams play?
## What data sources and stats can we look at?
## worldfootballR package
packages <- c("tidyverse", "worldfootballR", "scales", "cluster", "ClusterR",
"kableExtra", "magick")
for (package in packages) {
if (!requireNamespace(package, quietly = T)) {
install.packages(package, dependencies = T)
}
library(package, character.only = T)
cat(paste(package, "package loaded.\n"))
}
## FBref
## Season-level data:
types <- c("standard", "shooting", "passing", "passing_types", "defense",
"possession", "misc")
vars <- data.frame(names=NA)
for(i in types) {
df <- fb_season_team_stats(country = "ENG", gender = "M", season_end_year = 2023,
tier = "1st", stat_type = i)
names <- colnames(df) %>% data.frame() %>% rename(names=1)
vars <- rbind(vars, names) %>% distinct(names)
}
vars$names
## What stats define team styles of play? Standardize all to per 90 minutes
stats <- c("Squad", "Season_End_Year", "Poss", "G_minus_PK", "xA", "npxg_Per_Minutes", "Att 3rd_Tackles", "Mid_3rd_Tackles",
"Def_3rd_Tackles", "Att_Long", "Att_Med", "Att_Short", "Carries_Carries",
"CK_Pass_Types", "CrdY", "Att_Challenges", "Att 3rd_Touches", "CrsPA",
"Dead_Pass_Types", "Def_3rd_Touches", "Live_Pass_Types", "Live_Touches",
"Mid 3rd_Tackles", "Mid 3rd_Touches", "PPA", "PrgC_Carries", "PrgP",
"SoT_per_90_Standard", "SoT_percent_Standard", "Won_Aerial_Dules", "MP_Playing_Time")
## Filter the data to these variables
df <- data.frame()
for(i in types) {
df <- fb_season_team_stats(country = "ENG", gender = "M", season_end_year = 2023,
tier = "1st", stat_type = i)
assign(i, df)
}
gc()
df <- standard %>%
left_join(shooting) %>% left_join(defense) %>%
left_join(passing) %>% left_join(passing_types) %>%
left_join(possession) %>% left_join(misc) %>%
select(any_of(stats))
rm(list=setdiff(ls(), "df"))
## Standardize data that needs to be into per 90 min
df_std <- df[, 3:ncol(df)]/90
df_std <- df_std %>%
mutate(Squad=df$Squad) %>%
select(-MP_Playing_Time) %>%
select(Squad, everything())
df_opp <- df_std %>%
mutate(n=ifelse(grepl("vs", Squad), 1, NA)) %>%
filter(n==1) %>%
select(-n) %>%
mutate(Squad=gsub("vs ", "", Squad))
colnames(df_opp) <- paste(colnames(df_opp), "opp", sep="_")
df_opp <- df_opp %>% rename(Squad=1)
df_comb <- df_std %>%
mutate(n=ifelse(grepl("vs", Squad), NA, 1)) %>%
filter(n==1) %>%
select(-n) %>%
left_join(df_opp)
final <- df_comb %>%
select(-Squad)
## K-means clustering, yet again
set.seed(123)
k2 <- kmeans(final, centers = 6, nstart = 25)
class <- k2$cluster %>%
data.frame() %>%
mutate(Squad=df_comb$Squad) %>%
rename(Class=1) %>%
select(Squad, Class) %>%
left_join(df_comb)
rm(list=setdiff(ls(), "class"))
ranks <- class %>%
mutate_at(vars(-Squad, -Class), funs(rank(-.))) %>%
mutate_at(vras(-Squad, -Class), funs(round(., 0)))
ranks <- class %>%
mutate_at(vars(-Squad, -Class), funs(rank(-.))) %>%
mutate_at(vars(-Squad, -Class), funs(round(., 0)))
View(ranks)
## Now we want to classify team types - need to consider the following stats
## What defines how teams play?
## What data sources and stats can we look at?
## worldfootballR package
packages <- c("tidyverse", "worldfootballR", "scales", "cluster", "ClusterR",
"kableExtra", "magick")
for (package in packages) {
if (!requireNamespace(package, quietly = T)) {
install.packages(package, dependencies = T)
}
library(package, character.only = T)
cat(paste(package, "package loaded.\n"))
}
## FBref
## Season-level data:
types <- c("standard", "shooting", "passing", "passing_types", "defense",
"possession", "misc")
vars <- data.frame(names=NA)
for(i in types) {
df <- fb_season_team_stats(country = "ENG", gender = "M", season_end_year = 2023,
tier = "1st", stat_type = i)
names <- colnames(df) %>% data.frame() %>% rename(names=1)
vars <- rbind(vars, names) %>% distinct(names)
}
vars$names
## Now we want to classify team types - need to consider the following stats
## What defines how teams play?
## What data sources and stats can we look at?
## worldfootballR package
packages <- c("tidyverse", "worldfootballR", "scales", "cluster", "ClusterR",
"kableExtra", "magick")
for (package in packages) {
if (!requireNamespace(package, quietly = T)) {
install.packages(package, dependencies = T)
}
library(package, character.only = T)
cat(paste(package, "package loaded.\n"))
}
## FBref
## Season-level data:
types <- c("standard", "shooting", "passing", "passing_types", "defense",
"possession", "misc")
vars <- data.frame(names=NA)
for(i in types) {
df <- fb_season_team_stats(country = "ENG", gender = "M", season_end_year = 2023,
tier = "1st", stat_type = i)
names <- colnames(df) %>% data.frame() %>% rename(names=1)
vars <- rbind(vars, names) %>% distinct(names)
}
vars$names
## What stats define team styles of play? Standardize all to per 90 minutes
stats <- c("Squad", "Season_End_Year", "Poss", "xG_Expected", "xA", "npxG_Per_Minutes", "Att 3rd_Tackles", "Mid_3rd_Tackles",
"Def_3rd_Tackles", "Att_Long", "Att_Med", "Att_Short", "Carries_Carries",
"CK_Pass_Types", "CrdY", "Att_Challenges", "Att 3rd_Touches", "CrsPA",
"Dead_Pass_Types", "Def_3rd_Touches", "Live_Pass_Types", "Live_Touches",
"Mid 3rd_Tackles", "Mid 3rd_Touches", "PPA", "PrgC_Carries", "PrgP",
"SoT_per_90_Standard", "SoT_percent_Standard", "Won_Aerial_Dules", "MP_Playing_Time")
## Filter the data to these variables
df <- data.frame()
for(i in types) {
df <- fb_season_team_stats(country = "ENG", gender = "M", season_end_year = 2023,
tier = "1st", stat_type = i)
assign(i, df)
}
gc()
df <- standard %>%
left_join(shooting) %>% left_join(defense) %>%
left_join(passing) %>% left_join(passing_types) %>%
left_join(possession) %>% left_join(misc) %>%
select(any_of(stats))
rm(list=setdiff(ls(), "df"))
View(df)
df_std <- df %>%
mutate_at(vars(-npxG_Per_Minutes, -Squad, -Season_End_Year, -MP_Playing_Time),
funs(./(MP_Playing_Time/90))) %>%
mutate(Squad=df$Squad) %>%
select(-MP_Playing_Time) %>%
select(Squad, everything())
View(df_std)
df_std <- df %>%
mutate_at(vars(-npxG_Per_Minutes, -Squad, -Season_End_Year, -MP_Playing_Time, -Poss),
funs(./(MP_Playing_Time/90))) %>%
mutate(Squad=df$Squad) %>%
select(-MP_Playing_Time) %>%
select(Squad, everything())
df_std <- df %>%
mutate_at(vars(-npxG_Per_Minutes, -Squad, -Season_End_Year, -MP_Playing_Time, -Poss),
funs(./(MP_Playing_Time))) %>%
mutate(Squad=df$Squad) %>%
select(-MP_Playing_Time) %>%
select(Squad, everything())
df_std <- df %>%
mutate_at(vars(-npxG_Per_Minutes, -Squad, -Season_End_Year, -MP_Playing_Time, -Poss),
funs(./(MP_Playing_Time))) %>%
mutate(pxG_Per_Minutes=(xG_Expected-npxG_Per_Minutes)) %>%
mutate(Squad=df$Squad) %>%
select(-MP_Playing_Time) %>%
select(Squad, everything())
df_opp <- df_std %>%
mutate(n=ifelse(grepl("vs", Squad), 1, NA)) %>%
filter(n==1) %>%
select(-n) %>%
mutate(Squad=gsub("vs ", "", Squad))
colnames(df_opp) <- paste(colnames(df_opp), "opp", sep="_")
df_opp <- df_opp %>% rename(Squad=1)
df_comb <- df_std %>%
mutate(n=ifelse(grepl("vs", Squad), NA, 1)) %>%
filter(n==1) %>%
select(-n) %>%
left_join(df_opp)
final <- df_comb %>%
select(-Squad)
## K-means clustering, yet again
set.seed(123)
k2 <- kmeans(final, centers = 6, nstart = 25)
class <- k2$cluster %>%
data.frame() %>%
mutate(Squad=df_comb$Squad) %>%
rename(Class=1) %>%
select(Squad, Class) %>%
left_join(df_comb)
rm(list=setdiff(ls(), "class"))
ranks <- class %>%
mutate_at(vars(-Squad, -Class), funs(rank(-.))) %>%
mutate_at(vars(-Squad, -Class), funs(round(., 0)))
View(class)
## Now we want to classify team types - need to consider the following stats
## What defines how teams play?
## What data sources and stats can we look at?
## worldfootballR package
packages <- c("tidyverse", "worldfootballR", "scales", "cluster", "ClusterR",
"kableExtra", "magick")
for (package in packages) {
if (!requireNamespace(package, quietly = T)) {
install.packages(package, dependencies = T)
}
library(package, character.only = T)
cat(paste(package, "package loaded.\n"))
}
## FBref
## Season-level data:
types <- c("standard", "shooting", "passing", "passing_types", "defense",
"possession", "misc")
vars <- data.frame(names=NA)
for(i in types) {
df <- fb_season_team_stats(country = "ENG", gender = "M", season_end_year = 2023,
tier = "1st", stat_type = i)
names <- colnames(df) %>% data.frame() %>% rename(names=1)
vars <- rbind(vars, names) %>% distinct(names)
}
vars$names
## What stats define team styles of play? Standardize all to per 90 minutes
stats <- c("Squad", "Season_End_Year", "Poss", "xG_Expected", "xA", "npxG_Per_Minutes", "Att 3rd_Tackles", "Mid_3rd_Tackles",
"Def_3rd_Tackles", "Gls", "Ast", "Att_Long", "Att_Med", "Att_Short", "Carries_Carries",
"CK_Pass_Types", "CrdY", "Att_Challenges", "Att 3rd_Touches", "CrsPA",
"Dead_Pass_Types", "Def_3rd_Touches", "Live_Pass_Types", "Live_Touches",
"Mid 3rd_Tackles", "Mid 3rd_Touches", "PPA", "PrgC_Carries", "PrgP",
"SoT_per_90_Standard", "SoT_percent_Standard", "Won_Aerial_Dules", "MP_Playing_Time")
## Filter the data to these variables
df <- data.frame()
for(i in types) {
df <- fb_season_team_stats(country = "ENG", gender = "M", season_end_year = 2023,
tier = "1st", stat_type = i)
assign(i, df)
}
gc()
df <- standard %>%
left_join(shooting) %>% left_join(defense) %>%
left_join(passing) %>% left_join(passing_types) %>%
left_join(possession) %>% left_join(misc) %>%
select(any_of(stats))
rm(list=setdiff(ls(), "df"))
## Standardize data that needs to be into per 90 min
df_std <- df %>%
mutate_at(vars(-npxG_Per_Minutes, -Squad, -Season_End_Year, -MP_Playing_Time, -Poss),
funs(./(MP_Playing_Time))) %>%
mutate(pxG_Per_Minutes=(xG_Expected-npxG_Per_Minutes)) %>%
mutate(Gls_vs_xG=Gls-xG_Expected) %>%
mutate(Gls_vs_npxG=Gls-npxG_Per_Minutes) %>%
mutate(Ast_vs_xA=Ast-xA) %>%
mutate(Squad=df$Squad) %>%
select(-MP_Playing_Time) %>%
select(Squad, everything())
df_opp <- df_std %>%
mutate(n=ifelse(grepl("vs", Squad), 1, NA)) %>%
filter(n==1) %>%
select(-n) %>%
mutate(Squad=gsub("vs ", "", Squad))
colnames(df_opp) <- paste(colnames(df_opp), "opp", sep="_")
df_opp <- df_opp %>% rename(Squad=1)
df_comb <- df_std %>%
mutate(n=ifelse(grepl("vs", Squad), NA, 1)) %>%
filter(n==1) %>%
select(-n) %>%
left_join(df_opp)
final <- df_comb %>%
select(-Squad)
## K-means clustering, yet again
set.seed(123)
k2 <- kmeans(final, centers = 6, nstart = 25)
class <- k2$cluster %>%
data.frame() %>%
mutate(Squad=df_comb$Squad) %>%
rename(Class=1) %>%
select(Squad, Class) %>%
left_join(df_comb)
rm(list=setdiff(ls(), "class"))
ranks <- class %>%
mutate_at(vars(-Squad, -Class), funs(rank(-.))) %>%
mutate_at(vars(-Squad, -Class), funs(round(., 0)))
ranks <- class %>%
mutate_at(vars(-Squad, -Class, Season_End_Year), funs(rank(-.))) %>%
mutate_at(vars(-Squad, -Class), funs(round(., 0))) %>%
select(-Season_End_Year_opp)
ranks <- class %>%
mutate_at(vars(-Squad, -Class, -Season_End_Year), funs(rank(-.))) %>%
mutate_at(vars(-Squad, -Class), funs(round(., 0))) %>%
select(-Season_End_Year_opp)
